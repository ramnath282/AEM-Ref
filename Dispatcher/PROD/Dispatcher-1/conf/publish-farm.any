/publishfarm
	{  
	
	/vanity_urls {
     		/url "/libs/granite/dispatcher/content/vanityUrls.html"
     		/file "/tmp/vanity_urls"
     		/delay 300
	}

	# client headers which should be passed through to the render instances
	# (feature supported since dispatcher build 2.6.3.5222)
	/clientheaders
	  {
	  	$include "clientheaders.any"
	  }
	# hostname globbing for farm selection (virtual domain addressing)
	/virtualhosts
	  {
		$include "publish-vhosts.any"
	  }
	# the load will be balanced among these render instances
	/renders
	  {
	  $include "publish-renders.any"
	  }
	# only handle the requests in the following acl. default is 'none'
	# the glob pattern is matched against the first request line
	/filter
	  {
	  # deny everything and allow specific entries
	  /0001 { /type "deny"  /glob "*" }
	
	  # open consoles
	#    /0012 { /type "allow" /glob "* /crx/*"    }  # allow content repository
	#    /0013 { /type "allow" /glob "* /system/*" }  # allow OSGi console
	
	  # allow non-public content directories
	#    /0021 { /type "allow" /glob "* /apps/*"   }  # allow apps access
	  /0051  { /type "allow" /glob "* /etc.clientlibs/*"   } # to allow proxy client lib
	  /0053 { /type "allow" /glob "* /etc/designs/*"   } # to allow proxy for design folder
	  /0052  { /type "allow" /url "*/retail[./]*"   } # to allow proxy client lib
	#  /0022 { /type "allow" /glob "* /bin/*"    } # to allow bin servlet
	  /0022 { /type "allow" /path "/bin/*"    } # Security Fix
	 
  
 /0023 { /type "allow" /url "/content/*" } 
	#    /0024 { /type "allow" /glob "* /libs/*"   }
	#    /0025 { /type "deny"  /glob "* /libs/shindig/proxy*" } # if you enable /libs close access to proxy

	#    /0026 { /type "allow" /glob "* /home/*"   }
	#    /0027 { /type "allow" /glob "* /tmp/*"    }
	#    /0028 { /type "allow" /glob "* /var/*"    }
	

      	# /0023 { /type "allow" /url "* /content*" }  # disable this rule to allow mapped content only
	  /0025 { /type "deny" /glob "* /bin/querybuilder.*"    } # Security Fix
	  /0026 { /type "deny" /glob "GET */querybuilder.*" } # Security Fix AEMECOM-7889
	  /0029 { /type "allow" /glob "* /explore/*"    } # to allow explore servlet
	  /0030 { /type "allow" /glob "* /shop/*"    } # to allow shop url's for AG site
      
	  # enable specific mime types in non-public content directories 
	  /0041 { /type "allow" /url "* *.css *"   }  # enable css
	  /0042 { /type "allow" /url "* *.gif *"   }  # enable gifs
	  /0043 { /type "allow" /url "* *.ico *"   }  # enable icos
	  /0044 { /type "allow" /url "* *.js *"    }  # enable javascript
	  /0045 { /type "allow" /url "* *.png *"   }  # enable png
	  /0046 { /type "allow" /url "* *.swf *"   }  # enable flash
	  /0047 { /type "allow" /url "* *.svg *"   }  # enable SVG
	  /0048 { /type "allow" /url "* *.woff *"  }  # enable woff
	  /0049 { /type "allow" /url "* *.ttf *"   }  # enable ttf
	  /0050 { /type "allow" /url "* *.eot *"   }  # enable eot
	  /0054 { /type "allow" /url "* *.jpg *"   }  # enable jpg

	# CAB Request 08-24-2018
	  
	  # enable features 
      /0061 { /type "allow" /url "POST /content/[.]*.form.html" }  # allow POSTs to form selectors under content
      /0062 { /type "allow" /url "* /libs/cq/personalization/*" }  # enable personalization
      /0063 { /type "allow" /url "POST /content/[.]*.commerce.cart.json" }  # allow POSTs to update the shopping cart
	  

	  # deny content grabbing
	  /0081 { /type "deny"  /glob "GET *.infinity.json*" }
	  /0082 { /type "deny"  /glob "GET *.tidy.json*"     }
	  /0083 { /type "deny"  /glob "GET *.sysview.xml*"   }
	  /0084 { /type "deny"  /glob "GET *.docview.json*"  }
	  /0085 { /type "deny"  /glob "GET *.docview.xml*"   }
	  /0086 { /type "deny"  /glob "GET *.*[0-9].json*"   }
	  /0087 { /type "deny"  /glob "GET *.feed.xml*"      }
	#    /0088 { /type "allow" /glob "GET *.1.json*"        }  # allow one-level json requests

	  # deny query
	  /0090 { /type "deny"  /glob "* *.query.json*" }

	#Elham's changes
	  /0091 { /type "deny"  /glob "GET /content.pages.json*"      }
	  /0092 { /type "deny"  /glob "GET /content.languages.json*"      }
	  /0093 { /type "deny"  /glob "GET /content.blueprint.json*"      }
	  /0094 { /type "deny"  /glob "GET /content.feed.html*"      }

      # Required by Asset Share
      /0095 { /type "allow" /url "/libs/dam/lightbox.json" }
      /0097 { /type "allow" /url "/libs/dam/lightbox" }
      /0098 { /type "allow" /url "/libs/dam/drm" }
      /0099 { /type "allow" /url "/libs/granite/csrf/token.json" }
      /0100 { /type "allow" /url "/libs/wcm/core/content/pageinfo.json" }
      /0102 { /type "allow" /url "/home/users/*/profile/querybuilder/savedsearch*" }
      /0103 { /type "allow" /url "/libs/cq/security/userinfo.json" }
      /0104 { /type "allow" /url "/libs/cq/i18n/dict.en.json" }
      # /home/users/x/y/profile/lightbox/default/th9X93NN9F.jpg.assetdownload.zip?_charset_=utf-8
      /0105 { /type "allow" /url "/home/users/*/lightbox/*.assetdownload.zip" }
      /0106 { /type "allow" /url "/libs/*/scene7/*" }

      # Asset Share: Tags
      /0110 { /type "allow" /url "/content/dam/*/jcr:content.infinity.json" }
      /0111 { /type "allow" /url "/libs/wcm/core/resources/languages.overlay.infinity.json" }
      # /etc/tags.tags.json, /etc/tags.json, /etc/tags/properties/orientation.infinity.json, /etc/tags/*.infinity.json etc
      /0112 { /type "allow" /url "/etc/tags*json" }

      # CAB Request 08-24-2018
      /0500 { /type "allow" /url "/libs/granite/dispatcher/content/vanityUrls.html" }

      # Site admin:
      /0130 { /type "allow" /url "/libs/wcm/core/content/search/searchpanel/facets.overlay.infinity.json" }
	  }
	# allow propagation of replication posts (should seldomly be used)
	/propagateSyndPost "0"

	# the cache is used to store requests from the renders for faster delivery
	# for a second time.
	/cache
	  {
	  # the cacheroot must be equal to the document root of the webserver
	  /docroot "/mnt/var/www/html"

	  # sets the level upto which files named ".stat" will be created in the 
	  # document root of the webserver. when an activation request for some 
	  # handle is received, only files within the same subtree are affected 
	  # by the invalidation.
	  /statfileslevel "0"
  
	  # caches also authorized data
	  /allowAuthorized "0"
	  	  
	  # Flag indicating whether the dispatcher should serve stale content if
	  # no remote server is available.
	  /serveStaleOnError "1"

	  # the rules define, which pages should be cached. please note that
	  # - only GET requests are cached
	  # - only requests with an extension are cached
	  # - only requests without query parameters ( ? ) are cached
	  # - only unauthorized pages are cached unless allowUnauthorized is set to 1
	  /rules
		{
			$include "rules.any"
		}
	  # the invalidate section defines those pages which are 'invalidated' after
	  # any activation. please note that, the activated page itself and all 
	  # related documents are flushed on an modification. for example: if the 
	  # page /foo/bar is activated, all /foo/bar.* files are removed from the
	  # cache.
	  /invalidate
		{
		/0000
		  {
		  /glob "*"
		  /type "deny"
		  }
		/0001
		  {
		  /glob "*.html"
		  /type "allow"
		  }
	    /0002
          {
          /glob "/bin/getrelatedarticles.*.json"
          /type "allow"
          }
        /0003
          {
          /glob "/explore/data/filteredArticles.*.json"
          /type "allow"
          }
		}
	  /allowedClients
		{
		/0000
		  {
		  /glob "*.*.*.*"
		  /type "deny"
		  }
		$include "publish-invalidate-allowed.any"
		}
	  }
	# the statistics define, how the load should be balanced among the renders
	# according to the media-type. 
	/statistics
	  {
	  /categories
		{
		/html
		  {
		  /glob "*.html"
		  }
		/others
		  {
		  /glob "*"
		  }
		}
	  }
	}
