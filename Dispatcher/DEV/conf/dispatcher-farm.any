/dispatcherfarm
	{
#         ient headers which should be passed through to the render instances
        # (feature supported since dispatcher build 2.6.3.5222)
        /clientheaders
          {
                $include "clientheaders.any"
          }
        # hostname globbing for farm selection (virtual domain addressing)
        /virtualhosts
          {
                 "fisher-price.com" "barbie.com"
          }
        # the load will be balanced among these render instances
        /renders
          {
          $include "publish-renders.any"
          }
        # only handle the requests in the following acl. default is 'none'
        # the glob pattern is matched against the first request line
        /filter
        {

        # allow everything
        /0001 { /type "deny"  /glob "*" }

        # allow some requests
	/0023 { /type "allow" /glob "*/content*" }  # disable this rule to allow mapped content only
        /0041 { /type "allow" /glob "* *.css *"   }  # enable css
      	/0042 { /type "allow" /glob "* *.gif *"   }  # enable gifs
      	/0043 { /type "allow" /glob "* *.ico *"   }  # enable icos
      	/0044 { /type "allow" /glob "* *.js *"    }  # enable javascript
      	/0045 { /type "allow" /glob "* *.png *"   }  # enable png
      	/0046 { /type "allow" /glob "* *.swf *"   }  # enable flash
      	/0061 { /type "allow" /glob "POST /content/[.]*.form.html" }  # allow POSTs to form selectors under content
      	/0062 { /type "allow" /glob "* /libs/cq/personalization/*"  }  # enable personalization
      	/0081 { /type "deny"  /glob "GET *.infinity.json*" }
      	/0082 { /type "deny"  /glob "GET *.tidy.json*"     }
      	/0083 { /type "deny"  /glob "GET *.sysview.xml*"   }
      	/0084 { /type "deny"  /glob "GET *.docview.json*"  }
      	/0085 { /type "deny"  /glob "GET *.docview.xml*"  }      
      	/0086 { /type "deny"  /glob "GET *.*[0-9].json*" }
      	/0090 { /type "deny"  /glob "* *.query.json*" }        

	}

        # the cache is used to store requests from the renders for faster delivery
        # for a second time.
        /cache
          {
          # the cacheroot must be equal to the document root of the webserver
          /docroot "/mnt/var/www/html/content"

          # sets the level upto which files named ".stat" will be created in the
          # document root of the webserver. when an activation request for some

          # handle is received, only files within the same subtree are affected
          # by the invalidation.
          /statfileslevel "20"

          # caches also authorized data
          /allowAuthorized "1"

          # the rules define, which pages should be cached. please note that
          # - only GET requests are cached
          # - only requests with an extension are cached
          # - only requests without query parameters ( ? ) are cached
          # - only unauthorized pages are cached unless allowUnauthorized is set to 1
        
  	/serveStaleOnError "1"

  	/rules
                {
                /0000
                  {
                  # the globbing pattern to be compared against the url
                  # example: *             -> everything
                  #        : /foo/bar.*    -> only the /foo/bar documents
                  #        : /foo/bar/*    -> all pages below /foo/bar
                  #        : /foo/bar[./]* -> all pages below and /foo/bar itself
                  #        : *.html        -> all .html files
                  /glob "*"
                  /type "allow"
                  }
                }
          # the invalidate section defines those pages which are 'invalidated' after
          # any activation. please note that, the activated page itself and all
          # related documents are flushed on an modification. for example: if the
          # page /foo/bar is activated, all /foo/bar.* files are removed from the
          # cache.
          /invalidate
                {
                /0000
                  {
                  /glob "*"
                  /type "deny"
                  }
                /0001
                  {
                  /glob "*.html"
                  /type "allow"
                  }
                }
         # /allowedClients
          #      {
           #     /0000
            #      {
             #     /glob "*.*.*.*"
              #    /type "deny"
               #   }
         #       }
          }
        # the statistics define, how the load should be balanced among the renders
        # according to the media-type.
        /statistics
          {
          /categories
                {
                /html
                  {
                  /glob "*.html"
                  }
                /others
                  {
                  /glob "*"
                  }
                }
          }
        }

